# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import Select

class TestTestagregarasesorventaFinanciero():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.driver.maximize_window()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_testagregarasesorventaFinanciero(self):
    # Test name: test_agregar_asesor_venta_Financiero
    # Step # | name | target | value
    # 1 | open | http://concasa-financial-advisor.s3-website-us-east-1.amazonaws.com/login | 
    self.driver.get("http://concasa-financial-advisor.s3-website-us-east-1.amazonaws.com/login")
    # 2 | setWindowSize | 1920x1080 | 
    self.driver.maximize_window()
    # 3 | click | name=emaiI |
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.NAME, "emaiI")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.NAME, "emaiI")))
    self.driver.find_element(By.NAME, "emaiI").click()
    # 4 | type | name=emaiI | usiel.ramirez@concasa.com
    self.driver.find_element(By.NAME, "emaiI").send_keys("usiel.ramirez@concasa.com")
    # 5 | type | name=passI | 123456
    self.driver.find_element(By.NAME, "passI").send_keys("123456")
    # 6 | click | css=.textPassword > .beginning-button | 
    self.driver.find_element(By.CSS_SELECTOR, ".textPassword > .beginning-button").click()
    # 7 | waitForElementPresent | linkText=Usuarios | 30000
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.LINK_TEXT, "Usuarios")))
    # 8 | click | linkText=Usuarios |
    element = self.driver.find_element(By.LINK_TEXT, "Usuarios")
    self.driver.execute_script("arguments[0].click();", element)
    # 9 | waitForElementPresent | css=.active .roundedUser-button | 30000
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.CSS_SELECTOR, ".active .roundedUser-button")))
    element = self.driver.find_element(By.CSS_SELECTOR, ".active .roundedUser-button")
    self.driver.execute_script("arguments[0].click();", element)

    # 11 | click | css=.right-column .modal-section-container:nth-child(1) .text-input-modal |
    element = self.driver.find_element(By.CSS_SELECTOR, ".right-column .modal-section-container:nth-child(1) .text-input-modal")
    self.driver.execute_script("arguments[0].click();", element)
    # 12 | click | css=.modal |
    element = self.driver.find_element(By.CSS_SELECTOR, ".modal")
    self.driver.execute_script("arguments[0].click();", element)
    # 13 | click | css=.right-column .modal-section-container:nth-child(1) .text-input-modal |
    element = self.driver.find_element(By.CSS_SELECTOR, ".right-column .modal-section-container:nth-child(1) .text-input-modal")
    self.driver.execute_script("arguments[0].click();", element)
    # 14 | type | css=.right-column .modal-section-container:nth-child(1) .text-input-modal | prueba.av@yopmail.com
    self.driver.find_element(By.CSS_SELECTOR, ".right-column .modal-section-container:nth-child(1) .text-input-modal").send_keys("prueba.av@yopmail.com")
    # 15 | click | css=.right-column .modal-section-container:nth-child(2) .text-input-modal |
    element = self.driver.find_element(By.CSS_SELECTOR, ".right-column .modal-section-container:nth-child(2) .text-input-modal")
    self.driver.execute_script("arguments[0].click();", element)
    # 16 | click | css=.right-column .modal-section-container:nth-child(2) .text-input-modal |
    element = self.driver.find_element(By.CSS_SELECTOR, ".right-column .modal-section-container:nth-child(2) .text-input-modal")
    self.driver.execute_script("arguments[0].click();", element)
    # 17 | type | css=.right-column .modal-section-container:nth-child(2) .text-input-modal | 123456
    self.driver.find_element(By.CSS_SELECTOR, ".right-column .modal-section-container:nth-child(2) .text-input-modal").send_keys("123456")
    # 18 | click | css=.left-column .modal-section-container:nth-child(1) .text-input-modal |
    element = self.driver.find_element(By.CSS_SELECTOR, ".left-column .modal-section-container:nth-child(1) .text-input-modal")
    self.driver.execute_script("arguments[0].click();", element)
    # 19 | type | css=.left-column .modal-section-container:nth-child(1) .text-input-modal | prueba
    self.driver.find_element(By.CSS_SELECTOR, ".left-column .modal-section-container:nth-child(1) .text-input-modal").send_keys("prueba")
    # 20 | click | css=.left-column .modal-section-container:nth-child(2) .text-input-modal |
    element = self.driver.find_element(By.CSS_SELECTOR, ".left-column .modal-section-container:nth-child(2) .text-input-modal")
    self.driver.execute_script("arguments[0].click();", element)
    # 21 | type | css=.left-column .modal-section-container:nth-child(2) .text-input-modal | asesor ventas
    self.driver.find_element(By.CSS_SELECTOR, ".left-column .modal-section-container:nth-child(2) .text-input-modal").send_keys("asesor ventas")
    # 22 | click | css=.modal-section-container:nth-child(3) #dModal-Toggle > span |
    element = self.driver.find_element(By.CSS_SELECTOR, ".modal-section-container:nth-child(3) #dModal-Toggle > span")
    self.driver.execute_script("arguments[0].click();", element)
    # 23 | mouseOver | css=.modal-section-container:nth-child(3) #dModal-Toggle > span | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".modal-section-container:nth-child(3) #dModal-Toggle > span")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 24 | mouseOut | css=.show > #dModal-Toggle > span | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 25 | click | css=.dropdown-item:nth-child(2) > .new-user-role-dropdown-option |
    element = self.driver.find_element(By.CSS_SELECTOR, ".dropdown-item:nth-child(2) > .new-user-role-dropdown-option")
    self.driver.execute_script("arguments[0].click();", element)
    # 26 | click | css=.date-picker-default-text_modal |
    element = self.driver.find_element(By.CSS_SELECTOR, ".date-picker-default-text_modal")
    self.driver.execute_script("arguments[0].click();", element)



    # 27 | click | xpath=//div/div/div/input |
    element = self.driver.find_element(By.XPATH, "//div/div/div/input")
    self.driver.execute_script("arguments[0].click();", element)
    # 28 | type | css=.react-datepicker-ignore-onclickoutside | 1-4-2024
    self.driver.find_element(By.CSS_SELECTOR, ".react-datepicker-ignore-onclickoutside").send_keys("1-4-2024")

    # No deja dar click en el combo box de seleccionar rol
    # 29 | click | css=.modal-section-container:nth-child(4) .document-icon |
    element = self.driver.find_element(By.CSS_SELECTOR, ".modal-section-container:nth-child(4) .document-icon")
    self.driver.execute_script("arguments[0].click();", element)
    # 30 | click | css=.dropdown-item:nth-child(3) > .new-user-role-dropdown-option |
    element = self.driver.find_element(By.CSS_SELECTOR, ".dropdown-item:nth-child(3) > .new-user-role-dropdown-option")
    self.driver.execute_script("arguments[0].click();", element)


    # 31 | click | xpath=//div[3]/button[2] |
    element = self.driver.find_element(By.XPATH, "//div[3]/button[2]")
    self.driver.execute_script("arguments[0].click();", element)
