# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.support import expected_conditions as EC

class TestTestagregarpagodecuotafinanciero():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.driver.maximize_window()  # Pone el navegador en tamaño completo
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_testagregarpagodecuotafinanciero(self):
    # Test name: test_agregar_pago_de_cuota_financiero
    # Step # | name | target | value
    # 1 | open | http://concasa-financial-advisor.s3-website-us-east-1.amazonaws.com/login | 
    self.driver.get("http://concasa-financial-advisor.s3-website-us-east-1.amazonaws.com/login")
    # 2 | setWindowSize | fullsize |
    self.driver.maximize_window() #Pone el navegador en tamaño completo
    # 3 | click | name=emaiI | 
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.NAME, "emaiI")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.NAME, "emaiI")))
    self.driver.find_element(By.NAME, "emaiI").click()
    # 4 | type | name=emaiI | usiel.ramirez@concasa.com
    self.driver.find_element(By.NAME, "emaiI").send_keys("asesor.financiero.concasa@yopmail.com")
    # 5 | type | name=passI | 123456
    self.driver.find_element(By.NAME, "passI").send_keys("123456")
    # 6 | click | css=.textPassword > .beginning-button | 
    self.driver.find_element(By.CSS_SELECTOR, ".textPassword > .beginning-button").click()
    # 7 | mouseOver | css=.textPassword > .beginning-button | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".textPassword > .beginning-button")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 8 | mouseOut | css=.textPassword > .beginning-button | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 9 | click | css=#dropdown-basic > .select-pwa |
    #WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.CSS_SELECTOR, "#dropdown-basic > .select-pwa")))
    #WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.CSS_SELECTOR, "#dropdown-basic > .select-pwa")))
    #element = self.driver.find_element(By.CSS_SELECTOR, "#dropdown-basic > .select-pwa")
    #self.driver.execute_script("arguments[0].click();", element)

    # 10 | click | css=.testingDDP |
    #WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.CSS_SELECTOR, ".testingDDP")))
    #WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".testingDDP")))
    #element = self.driver.find_element(By.CSS_SELECTOR, ".testingDDP")
    #self.driver.execute_script("arguments[0].click();", element)
    # 11 | click | id=root | 
    #self.driver.find_element(By.ID, "root").click()
    # 12 | click | linkText=1382099100510 |
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.LINK_TEXT, "9911")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.LINK_TEXT, "9911")))
    element = self.driver.find_element(By.LINK_TEXT, "9911")
    self.driver.execute_script("arguments[0].click();", element)
    # 13 | click | linkText=Plan de Pagos |
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.LINK_TEXT, "Plan de Pagos")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.LINK_TEXT, "Plan de Pagos")))
    element = self.driver.find_element(By.LINK_TEXT, "Plan de Pagos")
    self.driver.execute_script("arguments[0].click();", element)
    # 14 | click | css=.aditional-payment-button span > span |
    element = self.driver.find_element(By.CSS_SELECTOR , ".button-addClient")
    self.driver.execute_script("arguments[0].click();", element)
    # 15 | click | css=.text-input-modal-money |
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.CSS_SELECTOR, ".text-input-modal-money")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".text-input-modal-money")))
    element = self.driver.find_element(By.CSS_SELECTOR, ".text-input-modal-money")
    self.driver.execute_script("arguments[0].click();", element)
    # 16 | type | css=.text-input-modal-money | 500
    self.driver.find_element(By.CSS_SELECTOR, ".text-input-modal-money").send_keys("750")
    # 17 | click | css=.modal-section-container:nth-child(2) .text-input-modal |
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.CSS_SELECTOR, ".modal-section-container:nth-child(2) .text-input-modal")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".modal-section-container:nth-child(2) .text-input-modal")))
    element = self.driver.find_element(By.CSS_SELECTOR, ".modal-section-container:nth-child(2) .text-input-modal")
    self.driver.execute_script("arguments[0].click();", element)
    # 18 | type | css=.modal-section-container:nth-child(2) .text-input-modal | 123
    self.driver.find_element(By.CSS_SELECTOR, ".modal-section-container:nth-child(2) .text-input-modal").send_keys("123")
    # 19 | click | css=.modal-section-container:nth-child(3) .text-input-modal |
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.CSS_SELECTOR, ".modal-section-container:nth-child(3) .text-input-modal")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".modal-section-container:nth-child(3) .text-input-modal")))
    element = self.driver.find_element(By.CSS_SELECTOR, ".modal-section-container:nth-child(3) .text-input-modal")
    self.driver.execute_script("arguments[0].click();", element)
    # 20 | type | css=.modal-section-container:nth-child(3) .text-input-modal | 123
    self.driver.find_element(By.CSS_SELECTOR, ".modal-section-container:nth-child(3) .text-input-modal").send_keys("1234")
    # 21 | click | css=.form-check:nth-child(3) > .form-check-input |
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.CSS_SELECTOR, ".form-check:nth-child(3) > .form-check-input")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".form-check:nth-child(3) > .form-check-input")))
    element = self.driver.find_element(By.CSS_SELECTOR, ".form-check:nth-child(3) > .form-check-input")
    self.driver.execute_script("arguments[0].click();", element)
    # 22 | click | css=.modal-section-container > #comment |
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.CSS_SELECTOR, ".modal-section-container > #comment")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".modal-section-container > #comment")))
    element = self.driver.find_element(By.CSS_SELECTOR, ".modal-section-container > #comment")
    self.driver.execute_script("arguments[0].click();", element)
    # 23 | type | css=.modal-section-container > #comment | abc
    self.driver.find_element(By.CSS_SELECTOR, ".modal-section-container > #comment").send_keys("abc")
    # 24 | click | css=.large-modal-standard-button |
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.CSS_SELECTOR, ".large-modal-standard-button")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".large-modal-standard-button")))
    element = self.driver.find_element(By.CSS_SELECTOR, ".large-modal-standard-button")
    self.driver.execute_script("arguments[0].click();", element)
    # 25 | mouseOver | css=.large-modal-standard-button | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".large-modal-standard-button")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 26 | mouseOut | css=.large-modal-standard-button | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()

    #Aquí se agrega la cuota pagada
    # 27 | click | css=.accept-button |
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.CSS_SELECTOR, ".accept-button")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".accept-button")))
    element = self.driver.find_element(By.CSS_SELECTOR, ".accept-button")
    self.driver.execute_script("arguments[0].click();", element)
    # 28 | click | css=.swal-button |
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.CSS_SELECTOR, ".swal-button")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".swal-button")))
    element = self.driver.find_element(By.CSS_SELECTOR, ".swal-button")
    self.driver.execute_script("arguments[0].click();", element)


  
