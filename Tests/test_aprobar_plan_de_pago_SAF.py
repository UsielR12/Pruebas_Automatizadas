# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.support import expected_conditions as EC

class TestTestaprobarplandepagoSAF():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.driver.maximize_window()  # Pone el navegador en tamaño completo
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_testaprobarplandepagoSAF(self):
    # Test name: test_aprobar_plan_de_pago_SAF
    # Step # | name | target | value
    # 1 | open | http://concasa-financial-advisor.s3-website-us-east-1.amazonaws.com |
    self.driver.get("http://concasa-financial-advisor.s3-website-us-east-1.amazonaws.com")
    # 2 | setWindowSize | 1936x1056 | 
    self.driver.maximize_window() #Pone el navegador en tamaño completo
    # 3 | click | name=emaiI |
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.NAME, "emaiI")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.NAME, "emaiI")))
    self.driver.find_element(By.NAME, "emaiI").click()
    # 4 | type | name=emaiI | usiel.ramirez@concasa.com
    self.driver.find_element(By.NAME, "emaiI").send_keys("usiel.ramirez@concasa.com")
    # 5 | click | name=passI | 
    self.driver.find_element(By.NAME, "passI").click()
    # 6 | type | name=passI | 123456
    self.driver.find_element(By.NAME, "passI").send_keys("123456")
    # 7 | click | css=.textPassword > .beginning-button | 
    self.driver.find_element(By.CSS_SELECTOR, ".textPassword > .beginning-button").click()
    # 8 | waitForElementPresent | linkText=Aprobaciones | 30000
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.XPATH, "//li[5]/a")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.XPATH, "//li[5]/a")))
    # 9 | click | linkText=Aprobaciones |
    element = self.driver.find_element(By.XPATH, "//li[5]/a")
    self.driver.execute_script("arguments[0].click();", element)

    # 10 | click | linkText=9091 | Aquí se selecciona el expediente que se va a aprobar
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.LINK_TEXT, "11")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.LINK_TEXT, "11")))
    element = self.driver.find_element(By.LINK_TEXT, "11")
    self.driver.execute_script("arguments[0].click();", element)

    # 11 | click | id=comment |
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.ID, "comment")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.ID, "comment")))
    element = self.driver.find_element(By.ID, "comment")
    self.driver.execute_script("arguments[0].click();", element)

    # 12 | type | id=comment | es aceptable
    self.driver.find_element(By.ID, "comment").send_keys("es aceptable")


    element = self.driver.find_element(By.XPATH, "//button[2]")
    self.driver.execute_script("arguments[0].click();", element)

    #WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.XPATH, "//div[3]/button[2]")))
    #element = self.driver.find_element(By.XPATH, "//div[3]/button[2]")
    #self.driver.execute_script("arguments[0].click();", element)


