# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.support import expected_conditions as EC

class TestTestaprobarplandepagoSAF():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.driver.maximize_window()  # Pone el navegador en tamaño completo
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_testaprobarplandepagoSAF(self):
    # Test name: test_aprobar_plan_de_pago_SAF
    # 1 | Abre el módulo de Asesor financiero
    self.driver.get("http://concasa-financial-advisor.s3-website-us-east-1.amazonaws.com")
    # 2 | Pone el navegador en tamaño completo
    self.driver.maximize_window() #Pone el navegador en tamaño completo
    # 3 | Espera que el espacio de email este cargado y disponible
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.NAME, "emaiI")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.NAME, "emaiI")))
    # 4 | Presiona el espacio del email
    self.driver.find_element(By.NAME, "emaiI").click()
    # 5 | Digita el email
    self.driver.find_element(By.NAME, "emaiI").send_keys("usiel.ramirez@concasa.com")
    # 6 | Presiona el espacio de contraseña
    self.driver.find_element(By.NAME, "passI").click()
    # 7 | Digita la contraseña
    self.driver.find_element(By.NAME, "passI").send_keys("123456")
    # 8 | Presiona el botón de iniciar sesión
    self.driver.find_element(By.CSS_SELECTOR, ".textPassword > .beginning-button").click()
    # 9 | Espera que el botón de aprobaciones este disponible
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.XPATH, "//li[5]/a")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.XPATH, "//li[5]/a")))
    # 10 | Presiona el botón aprobaciones del menú hamburguesa
    element = self.driver.find_element(By.XPATH, "//li[5]/a")
    self.driver.execute_script("arguments[0].click();", element)
    # 11 | Espera que el expediente que se va a aprobar esté disponible
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.LINK_TEXT, "9941")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.LINK_TEXT, "9941")))
    # 12 | Presiona el expediente para la aprobación
    element = self.driver.find_element(By.LINK_TEXT, "9941")
    self.driver.execute_script("arguments[0].click();", element)
    # 13 | Espera que el espacio de razón este disponible
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.ID, "comment")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.ID, "comment")))
    # 14 | Presiona el espacio de razón
    element = self.driver.find_element(By.ID, "comment")
    self.driver.execute_script("arguments[0].click();", element)
    # 15 | Digita la razón para la aprobación
    self.driver.find_element(By.ID, "comment").send_keys("No es factible")
    # 16 | Presiona el botón de aprobación
    element = self.driver.find_element(By.CSS_SELECTOR, ".reject-button")
    self.driver.execute_script("arguments[0].click();", element)
    # 17 | Espera que el botón "si" para confirmar la aprobación
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.XPATH, "//div[3]/button[2]")))
    # 18 | Presiona el botón si para confirmar la aprobación
    element = self.driver.find_element(By.XPATH, "//div[3]/button[2]")
    self.driver.execute_script("arguments[0].click();", element)
    time.sleep(3)


