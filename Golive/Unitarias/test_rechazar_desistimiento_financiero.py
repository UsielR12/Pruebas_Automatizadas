# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.support import expected_conditions as EC

class TestTestrechazardesistimientofinanciero():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.driver.maximize_window()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_testrechazardesistimientofinanciero(self):
    # Test name: test_aprobar_desistimiento_financiero
    # 1 | Abre el módulo de financiero
    self.driver.get("http://concasa-financial-advisor.s3-website-us-east-1.amazonaws.com/login")
    # 2 | Pone el navegador en tamaño completo
    self.driver.maximize_window()
    # 3 | Espera que el espacio del email este disponible
    WebDriverWait(self.driver, 60).until(EC.visibility_of_element_located((By.NAME, "emaiI")))
    WebDriverWait(self.driver, 60).until(EC.element_to_be_clickable((By.NAME, "emaiI")))
    # 4 | Presiona el espacio de email en el espacio de email
    self.driver.find_element(By.NAME, "emaiI").click()
    # 5 | Digita el email "usiel.ramirez@concasa.com"
    self.driver.find_element(By.NAME, "emaiI").send_keys("usiel.ramirez@concasa.com")
    # 6 | Presiona el espacio de contraseña
    self.driver.find_element(By.NAME, "passI").click()
    # 7 | Digita la contraseña "123456"
    self.driver.find_element(By.NAME, "passI").send_keys("123456")
    # 8 | Presiona el boton de iniciar sesión
    self.driver.find_element(By.CSS_SELECTOR, ".textPassword > .beginning-button").click()
    # 9 | Hace un mouse Over
    element = self.driver.find_element(By.CSS_SELECTOR, ".textPassword > .beginning-button")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 10 | Hace un mouse Out
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 11 | Espera que cargue el botón de "Aprobaciones"
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.LINK_TEXT, "Aprobaciones")))
    # 12 | Presiona la sección de "Aprobaciones" del menu hamburguesa
    element = self.driver.find_element(By.LINK_TEXT, "Aprobaciones")
    self.driver.execute_script("arguments[0].click();", element)
    # 13 | Presiona la sección de Desistimientos
    element = self.driver.find_element(By.LINK_TEXT, "Desistimientos")
    self.driver.execute_script("arguments[0].click();", element)
    # 14 | Espera que cargue
    time.sleep(5)
    # 15 | Va la segunda página de los desistimientos
    element = self.driver.find_element(By.CSS_SELECTOR, ".fade:nth-child(3) .pagination-button-pwa:nth-child(4)")
    self.driver.execute_script("arguments[0].click();", element)
    # 16 | Espera que el expediente que se quiere presionar este disponible
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.LINK_TEXT, "38")))
    # 17 | Presiona el expediente que se a gestionar el desistimiento
    element = self.driver.find_element(By.LINK_TEXT, "38")
    self.driver.execute_script("arguments[0].click();", element)
    # 18 | Espera que el botón de "Aprobar" este disponible
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.CSS_SELECTOR, ".reject-button")))
    # 19 | Presiona el botón de "Aprobar"
    element = self.driver.find_element(By.CSS_SELECTOR, ".reject-button")
    self.driver.execute_script("arguments[0].click();", element)
    # 20 | Espera que el botón de "Sí" este disponible del modal de aceptar desistimiento
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.CSS_SELECTOR, ".actionsContainer > .accept-button")))
    # 21 | Presiona el botón de "Sí" del modal de aceptar desistimiento
    element = self.driver.find_element(By.CSS_SELECTOR, ".actionsContainer > .accept-button")
    self.driver.execute_script("arguments[0].click();", element)
    # 22 | Espera que el botón de "Ok" este disponible del modal de se realizó con exito el desistimiento
    WebDriverWait(self.driver, 30).until(expected_conditions.presence_of_element_located((By.CSS_SELECTOR, ".swal2-confirm")))
    # 23 | Presiona el botón de "Ok" del modal de se realizó con exito el desistimiento
    element = self.driver.find_element(By.CSS_SELECTOR, ".swal2-confirm")
    self.driver.execute_script("arguments[0].click();", element)


